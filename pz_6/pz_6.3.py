# Дано множество A из N точек (точки заданы своими координатами х, у). Среди всех
# точек этого множества, лежащих во второй четверти, найти точку, наиболее
# удаленную от начала координат. Если таких точек нет, то вывести точку с нулевыми
# координатами.
# краткий экскурс в понятия математики используемые для этой задачи
#координаты делятся на 4 четверти
# первая четверть: x>0 y>0
# вторая четверть: x<0 y>0
# третья четверть: х<0 y<0
# четвертая четверть: x>0 y<0
# Расстояние от точки (x,y) до начала координат(0,0) = sqrt(x**2 + y**2)

import math
#ввод данных
N = input("Введите количество точек N: ")

while type(N) != int: #проверка для исключения ошибок
    try:
        N = int(N)
    except:
        print('Число должно быть целым!')
        N = input("Введите размер списка N: ")

points = [] #создаем список для хранения введенных точек
for _ in range(N): #ввод точек для указанного количества точек
    x = float(input(f"Введите координату x для точки {_ + 1}: "))
    y = float(input(f"Введите координату y для точки {_ + 1}: "))
    points.append((x, y)) #добавляем наши значения в список

#функция для вычисления расстояния от точки до начала координат
def distance_to_origin(x, y):
    return math.sqrt(x**2 + y**2)

#функция для поиска точки, наиболее удаленной от начала координат во второй четверти
def find_farthest_point(points):
    farthest_point = (0, 0) #это точка по умолчанию, которая будет возвращена, если не найдено ни одной точки во второй четверти
    max_distance = -1  #переменная для хранения максимального расстояние

    for x, y in points: #перебираем все точки из списка points
        #проверяем, лежит ли точка во второй четверти
        if x < 0 and y > 0:
            #если точка лежит во второй четверти, вычисляем её расстояние до начала координат
            distance = distance_to_origin(x, y)
            #если текущее расстояние больше максимального, обновляем данные
            if distance > max_distance:
                max_distance = distance
                farthest_point = (x, y)

    return farthest_point


# Находим точку, наиболее удаленную от начала координат во второй четверти
result = find_farthest_point(points)

# Выводим результат
print("Точка, наиболее удаленная от начала координат во второй четверти:", result)